{"version":3,"sources":["components/Table/Pagination/Pagination.tsx","components/Table/Table.tsx","App.tsx","index.tsx","components/Table/Pagination/Pagination.module.css","components/Table/Table.module.css"],"names":["Pagination","onChange","pagesCount","location","changePageHandler","page","pagesIndent","Math","floor","MAX_COUNT_OF_DISPLAYED_PAGES","$pages","Array","fill","map","_","index","pageNumber","onClick","className","cn","styles","pageButton","active","box","fastTravelLeftBox","disabled","fastTravelRightBox","Table","title","headerFields","values","useState","setPage","field","isOrderDesc","sortOptions","setSortOptions","localValues","setLocalValues","searchValue","setSearchValue","headerKeys","from","keys","getRow","useCallback","val","$cols","i","id","getValuesToRender","to","slice","onSort","prevState","sorted","sort","prev","next","reverse","searchHandler","e","searchQuery","target","value","searchRegex","RegExp","newList","filter","Object","test","$header","k","v","isSortField","headerCell","sorting","desc","searchInput","type","table","ceil","length","newPage","App","header","Map","data","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.71e004e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport cn from 'classnames'\r\nimport styles from './Pagination.module.css'\r\n\r\ntype TPaginationProps = {\r\n  pagesCount: number,\r\n  onChange: (newPage: number) => void,\r\n  location: number\r\n}\r\n\r\nconst MAX_COUNT_OF_DISPLAYED_PAGES = 11\r\nconst Pagination: React.FC<TPaginationProps> = ({onChange, pagesCount, location}) => {\r\n\r\n  const changePageHandler = (page: number) => {\r\n    onChange(page)\r\n  }\r\n\r\n  const pagesIndent = Math.floor(MAX_COUNT_OF_DISPLAYED_PAGES / 2)\r\n  const $pages = Array(pagesCount).fill(null).map((_, index) => {\r\n    const pageNumber = index + 1\r\n    if (pageNumber < location - pagesIndent && location < pagesCount - pagesIndent) return\r\n    if (pageNumber > location + pagesIndent && location > pagesIndent) return\r\n    if (location < pagesIndent + 1 && pageNumber > MAX_COUNT_OF_DISPLAYED_PAGES) return\r\n    if (location > pagesCount - pagesIndent - 1 && pageNumber <= pagesCount - MAX_COUNT_OF_DISPLAYED_PAGES) return\r\n\r\n    return (\r\n      <button\r\n        onClick={() => changePageHandler(pageNumber)}\r\n        className={cn(styles.pageButton, {[styles.active]: pageNumber === location})}\r\n        key={`page-${pageNumber}`}\r\n      >\r\n        {pageNumber}\r\n      </button>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={styles.box}>\r\n      <span className={styles.fastTravelLeftBox}>\r\n        <button\r\n          onClick={() => changePageHandler(1)}\r\n          className={styles.pageButton}\r\n          disabled={location === 1}\r\n        >\r\n          {'<<'}\r\n        </button>\r\n        <button\r\n          onClick={() => changePageHandler(location - 1)}\r\n          className={styles.pageButton}\r\n          disabled={location === 1}\r\n        >\r\n          {'<'}\r\n        </button>\r\n      </span>\r\n\r\n      {$pages}\r\n\r\n      <span className={styles.fastTravelRightBox}>\r\n        <button\r\n          onClick={() => changePageHandler(location + 1)}\r\n          className={styles.pageButton}\r\n          disabled={location === pagesCount}\r\n        >\r\n          {'>'}\r\n        </button>\r\n        <button\r\n          onClick={() => changePageHandler(pagesCount)}\r\n          className={styles.pageButton}\r\n          disabled={location === pagesCount}\r\n        >\r\n          {'>>'}\r\n        </button>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination","import React, {ChangeEvent, ReactNode, useCallback, useState} from 'react'\r\nimport styles from './Table.module.css'\r\nimport cn from 'classnames'\r\nimport Pagination from './Pagination/Pagination'\r\n\r\nexport type TTableHeaderFields = Map<string, string | number>\r\ntype TTableValues = {\r\n  id: string | number,\r\n  [key: string]: string | number\r\n}\r\n\r\ntype TTableProps = {\r\n  title?: string,\r\n  headerFields: TTableHeaderFields,\r\n  values: TTableValues[],\r\n}\r\n\r\ntype TSortOptions = {\r\n  field: keyof TTableValues | null,\r\n  isOrderDesc: boolean\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 50\r\n\r\nconst Table: React.FC<TTableProps> = ({title, headerFields, values}) => {\r\n  const [page, setPage] = useState(1)\r\n  const [sortOptions, setSortOptions] = useState<TSortOptions>({field: null, isOrderDesc: false})\r\n  const [localValues, setLocalValues] = useState<TTableValues[]>(values)\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const headerKeys = Array.from(headerFields.keys())\r\n\r\n  const getRow = useCallback((val: TTableValues): ReactNode => {\r\n    const $cols = headerKeys.map(i => <td key={val[i]}>{val[i]}</td>)\r\n    return (<tr key={val.id}>{$cols}</tr>)\r\n  }, [])\r\n\r\n  const getValuesToRender = useCallback(() => {\r\n    const from = (page - 1) * ITEMS_PER_PAGE\r\n    const to = page * ITEMS_PER_PAGE\r\n    return localValues.slice(from, to)\r\n  }, [page, localValues])\r\n\r\n  const onSort = useCallback((field: string) => {\r\n    let isOrderDesc = sortOptions.isOrderDesc\r\n    if (sortOptions.field === field) {\r\n      isOrderDesc = !isOrderDesc\r\n      setSortOptions(prevState => ({...prevState, isOrderDesc}))\r\n    } else {\r\n      isOrderDesc = false\r\n      setSortOptions({field, isOrderDesc})\r\n    }\r\n    const sorted = [...localValues.sort((prev, next) => {\r\n      return prev[field] < next[field] ? -1 : 1\r\n    })]\r\n    if (isOrderDesc) sorted.reverse()\r\n    setLocalValues(sorted)\r\n  }, [sortOptions, localValues])\r\n\r\n  const searchHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    const searchQuery = e.target.value\r\n    const searchRegex = new RegExp(searchQuery)\r\n    setSearchValue(searchQuery)\r\n    const newList = [...values.filter(i => {\r\n      for (const value of Object.values(i)) {\r\n        if (searchRegex.test(value+'')) return true\r\n      }\r\n    })]\r\n    setLocalValues(newList)\r\n    setPage(1)\r\n  }, [])\r\n\r\n  const $header: ReactNode = Array.from(headerFields)\r\n    .map(([k, v]) => {\r\n      const isSortField = sortOptions.field === k\r\n      return (<td\r\n        onClick={() => onSort(k)}\r\n        className={cn(styles.headerCell,\r\n          {\r\n            [styles.sorting]: isSortField,\r\n            [styles.desc]: isSortField && sortOptions.isOrderDesc\r\n          })}\r\n        key={v}>\r\n        {v}\r\n      </td>)\r\n    }\r\n    )\r\n\r\n  const $cols = getValuesToRender().map(i => getRow(i))\r\n  return (\r\n    <>\r\n      <label>\r\n        Поиск\r\n        <input value={searchValue} onChange={searchHandler} className={styles.searchInput} type=\"text\"/>\r\n      </label>\r\n      <table className={styles.table}>\r\n        {title && <caption className={styles.title}>{title}</caption>}\r\n        <thead>\r\n          <tr>\r\n            {$header}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {$cols}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        location={page}\r\n        pagesCount={Math.ceil(localValues.length / ITEMS_PER_PAGE)}\r\n        onChange={(newPage) => setPage(newPage)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Table","import React from 'react'\r\nimport Table, {TTableHeaderFields} from './components/Table/Table'\r\nimport data from './users.json'\r\n\r\ntype TValues = {\r\n  id: number,\r\n  name: string,\r\n  username: string,\r\n  email: string,\r\n  phone: string,\r\n  website: string\r\n}\r\ntype THeaderKeys = keyof TValues\r\n\r\nfunction App() {\r\n  const header: TTableHeaderFields = new Map<THeaderKeys, string | number>([\r\n    ['id', 'id'],\r\n    ['name', 'Имя'],\r\n    ['username', 'Никнейм'],\r\n    ['email', 'Почта'],\r\n    ['phone', 'Номер телефона'],\r\n    ['website', 'веб-сайт'],\r\n  ])\r\n\r\n  const values: TValues[] = data\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        title='Список пользователей'\r\n        headerFields={header}\r\n        values={values}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Pagination_box__jQNxu\",\"pageButton\":\"Pagination_pageButton__1XHin\",\"active\":\"Pagination_active__3TFXT\",\"fastTravelLeftBox\":\"Pagination_fastTravelLeftBox__2ai4b\",\"fastTravelRightBox\":\"Pagination_fastTravelRightBox__2Nmg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"Table_searchInput__2DANq\",\"title\":\"Table_title__1PF6m\",\"table\":\"Table_table__3miIM\",\"headerCell\":\"Table_headerCell__FlU3m\",\"sorting\":\"Table_sorting__boZY8\",\"desc\":\"Table_desc__14GNl\"};"],"sourceRoot":""}